<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.wenzhuo4657.dailyWeb.infrastructure.database.dao.UserContentnameDao">

    <resultMap type="cn.wenzhuo4657.dailyWeb.infrastructure.database.entity.UserContentname" id="UserContentnameMap">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="userid" column="userId" jdbcType="INTEGER"/>
        <result property="contentnameid" column="contentNameId" jdbcType="INTEGER"/>
        <result property="typeid" column="typeId" jdbcType="INTEGER"/>
    </resultMap>


    <resultMap type="cn.wenzhuo4657.dailyWeb.infrastructure.database.entity.ContentName" id="ContentnameMap">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="name" column="name" jdbcType="VARCHAR"/>
        <result property="type" column="type" jdbcType="INTEGER"/>
        <result property="createTime" column="create_time" jdbcType="VARCHAR"/>
        <result property="updateTime" column="update_time" jdbcType="VARCHAR"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="UserContentnameMap">
        select
id, userId, contentNameId, typeId
        from user_contentName
        where id = #{id}
    </select>


    <!--统计总行数-->
    <select id="count" resultType="java.lang.Long">
        select count(1)
        from user_contentName
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="userid != null">
                and userId = #{userid}
            </if>
            <if test="contentnameid != null">
                and contentNameId = #{contentnameid}
            </if>
            <if test="typeid != null">
                and typeId = #{typeid}
            </if>
        </where>
    </select>

    <select id="query" resultType="java.lang.Integer">
        select count(*)
        from user_contentName
        where userId = #{userId} and typeId = #{typeId} and contentNameId = #{contentNameId}
    </select>


    <select id="queryByloginIdAndtypeId"
            resultMap="ContentnameMap">
        select c.*
        from user_contentName u
                left join contentName c on u.contentNameId = c.id
        where u.userId = #{loginId}
          and u.typeId = #{typeId}
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="id" useGeneratedKeys="true">
        insert into user_contentName(userId, contentNameId, typeId)
        values (#{userid}, #{contentnameid}, #{typeid})
    </insert>

    <insert id="insertBatch" keyProperty="id" useGeneratedKeys="true">
        insert into user_contentName(userId, contentNameId, typeId)
        values
        <foreach collection="entities" item="entity" separator=",">
        (#{entity.userid}, #{entity.contentnameid}, #{entity.typeid})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" keyProperty="id" useGeneratedKeys="true">
        insert into user_contentName(id, userId, contentNameId, typeId)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.id}, #{entity.userid}, #{entity.contentnameid}, #{entity.typeid})
        </foreach>
        on conflict(userId, typeId) do update set
            contentNameId = excluded.contentNameId
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update user_contentName
        <set>
            <if test="userid != null">
                userId = #{userid},
            </if>
            <if test="contentnameid != null">
                contentNameId = #{contentnameid},
            </if>
            <if test="typeid != null">
                typeId = #{typeid},
            </if>
        </set>
        where id = #{id}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete from user_contentName where id = #{id}
    </delete>

</mapper>

